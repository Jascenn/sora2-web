# =============================================================================
# Sora2 API - Environment Configuration Template
# =============================================================================
# Copy this file to .env and fill in the actual values
# Do not commit .env file to version control
# =============================================================================

# -----------------------------------------------------------------------------
# App Configuration
# -----------------------------------------------------------------------------
# Node environment: development, production, or test
NODE_ENV="development"

# Server port number
PORT=3001

# Frontend application URL (for CORS configuration)
FRONTEND_URL="http://localhost:3000"

# Backend API URL (for generating callback URLs)
BACKEND_URL="http://localhost:3001"

# -----------------------------------------------------------------------------
# Database Configuration
# -----------------------------------------------------------------------------
# PostgreSQL connection string
# Format: postgresql://USERNAME:PASSWORD@HOST:PORT/DATABASE?schema=SCHEMA
DATABASE_URL="postgresql://sora2user:sora2pass@localhost:5432/sora2?schema=public"

# -----------------------------------------------------------------------------
# JWT Configuration
# -----------------------------------------------------------------------------
# Secret key for signing JWT tokens (CHANGE THIS IN PRODUCTION!)
# Use a strong random string, e.g., generated with: openssl rand -base64 32
JWT_SECRET="your-secret-key-change-in-production"

# JWT token expiration time (e.g., 7d, 24h, 30m)
JWT_EXPIRES_IN="7d"

# -----------------------------------------------------------------------------
# OpenAI / Sora Configuration
# -----------------------------------------------------------------------------
# OpenAI API key for Sora video generation
# Get your API key from: https://platform.openai.com/api-keys
OPENAI_API_KEY="sk-your-openai-api-key-here"

# OpenAI API base URL (use custom endpoint if needed)
OPENAI_API_BASE_URL="https://api.openai.com/v1"

# OpenAI organization ID (optional, leave empty if not using org)
OPENAI_ORG_ID=""

# -----------------------------------------------------------------------------
# Storage Configuration
# -----------------------------------------------------------------------------
# Storage provider: s3 (AWS S3) or oss (Aliyun OSS)
STORAGE_PROVIDER="s3"

# AWS S3 Configuration (optional, required if STORAGE_PROVIDER=s3)
# Get credentials from AWS IAM console
AWS_ACCESS_KEY_ID="your-aws-access-key-id"
AWS_SECRET_ACCESS_KEY="your-aws-secret-access-key"
AWS_REGION="us-east-1"
AWS_S3_BUCKET="your-s3-bucket-name"

# -----------------------------------------------------------------------------
# Redis Configuration (Optional)
# -----------------------------------------------------------------------------
# Redis connection URL for queue management
# If not set, queue functionality will be limited
# Format: redis://HOST:PORT or redis://USERNAME:PASSWORD@HOST:PORT
REDIS_URL="redis://localhost:6379"

# -----------------------------------------------------------------------------
# Content Moderation (Optional)
# -----------------------------------------------------------------------------
# Enable content moderation for user-generated prompts
# Set to true to enable, false to disable
ENABLE_CONTENT_MODERATION=false
